#pragma once
#include "consts.h"

// Command codes.
enum symcodes {
    // Lets start with the catcodes
    invalid_cmd    = 0,
    escape_catcode = 0,
    open_catcode,
    close_catcode,
    dollar_catcode,
    alignment_catcode,
    eol_catcode,
    parameter_catcode,
    hat_catcode,
    underscore_catcode,
    ignored_catcode,
    space_catcode,
    letter_catcode,
    other_catcode,
    active_catcode,
    comment_catcode,
    invalid_catcode,
    special_catcode,
    // Now the commands
    inhibit_xml_cmd,
    endv_cmd,
    section_cmd,
    label_cmd,
    ref_cmd,
    eqref_cmd,
    par_cmd,
    ignorep_cmd,
    start_par_cmd,
    endcsname_cmd,
    multicolumn_cmd,
    dont_expand_cmd,
    atdocument_cmd,
    fvset_cmd,
    biblio_cmd,
    aparaitre_cmd,
    citation_cmd,
    end_citation_cmd,
    bpers_cmd,
    cititem_cmd,
    bibitem_cmd,
    cite_cmd,
    omitcite_cmd,
    bib_cmd,
    self_insert_cmd,
    thebibliography_cmd,
    end_thebibliography_cmd,
    footcitepre_cmd,
    cite_one_cmd,
    solvecite_cmd,
    vglue_cmd,
    xgetfontsize_cmd,
    numberwithin_cmd,
    ifdefinable_cmd,
    dblarg_cmd,
    titlepage_cmd,
    color_cmd,
    backslash_cmd,
    hline_cmd,
    skip_cmd,
    hfill_cmd,
    vfill_cmd,
    sub_cmd,
    oldfont_cmd,
    argfont_cmd,
    noargfont_cmd,
    fontsize_cmd,
    ltfont_cmd,
    item_cmd,
    pers_cmd,
    doc_class_cmd,
    package_cmd,
    if_package_loaded_cmd,
    if_package_later_cmd,
    if_package_with_cmd,
    provides_package_cmd,
    pass_options_cmd,
    declare_options_cmd,
    options_not_used_cmd,
    process_options_cmd,
    execute_options_cmd,
    load_with_options_cmd,
    needs_format_cmd,
    at_end_of_class_cmd,
    inputclass_cmd,
    subfigure_cmd,
    float_cmd,
    pop_stack_cmd,
    box_cmd,
    math_comp_cmd,
    big_cmd,
    style_cmd,
    limits_cmd,
    nonumber_cmd,
    nonscript_cmd,
    eqno_cmd,
    tag_cmd,
    linebreak_cmd,
    fancy_cmd,
    xfancy_cmd,
    xthepage_cmd,
    url_cmd,
    hanl_cmd,
    addatt_cmd,
    over_cmd,
    popmodule_cmd,
    pushmodule_cmd,
    begingroup_cmd,
    startprojet_cmd,
    declaretopics_cmd,
    footnote_cmd,
    caption_cmd,
    ra_startdoc_cmd,
    fnhack_cmd,
    interpret_rc_cmd,
    centering_cmd,
    fbox_cmd,
    save_box_cmd,
    hspace_cmd,
    includegraphics_cmd,
    unimp_font_cmd,
    error_cmd,
    glo_cmd,
    xmllatex_cmd,
    specimp_cmd,
    unimp_cmd,
    cr_cmd,
    scan_glue_cmd,
    kern_cmd,
    make_box_cmd,
    char_num_cmd,
    cst1_cmd,
    cst2_cmd,
    cst_cmd,
    ignoreA_cmd,
    ding_cmd,
    grabenv_cmd,
    selectfont_cmd,
    usefont_cmd,
    isin_cmd,
    nobreakspace_cmd,
    file_cmd,
    specmath_cmd,
    xmlelt_cmd,
    newcolumntype_cmd,
    arg_font_cmd,
    rule_cmd,
    reevaluate_cmd,
    soul_cmd,
    trees_cmd,
    matter_cmd,
    index_cmd,
    gloss_cmd,
    only_preamble_cmd,
    toc_cmd,
    listfiles_cmd,
    typein_cmd,
    cons_cmd,
    ipa_cmd,
    nomath_cmd,
    // start ENV
    first_env_cmd,
    document_cmd,
    keywords_cmd,
    center_cmd,
    figure_cmd,
    table_cmd,
    glossaire_cmd,
    itemize_cmd,
    enumerate_cmd,
    description_cmd,
    list_cmd,
    usecounter_cmd,
    ignore_env_cmd,
    ignore_content_cmd,
    raw_env_cmd,
    math_env_cmd,
    RAsection_env_cmd,
    tabular_env_cmd,
    verbatim_env_cmd,
    minipage_cmd,
    subequations_cmd,
    picture_env_cmd,
    xmlelement_env_cmd,
    filecontents_env_cmd,
    last_env_cmd,
    end_document_cmd,
    end_keywords_cmd,
    end_center_cmd,
    end_figure_cmd,
    end_table_cmd,
    end_glossaire_cmd,
    end_itemize_cmd,
    end_enumerate_cmd,
    end_description_cmd,
    end_list_cmd,
    end_ignore_env_cmd,
    end_ignore_content_cmd,
    end_raw_env_cmd,
    end_math_env_cmd,
    end_RAsection_env_cmd,
    end_tabular_env_cmd,
    end_verbatim_env_cmd,
    end_minipage_cmd,
    end_subequations_cmd,
    end_picture_env_cmd,
    end_xmlelement_env_cmd,
    end_filecontents_env_cmd,
    // end ENV
    begin_cmd,
    end_cmd,      // is this OK ?????
    mathordb_cmd, // bold math ord
    mathord_cmd,
    mathbin_cmd,
    mathrel_cmd,
    mathinner_cmd,
    mathbetween_cmd,
    mathopen_cmd,
    mathclose_cmd,
    mathop_cmd,
    mathopn_cmd,
    mathspace_cmd,
    mathfont_cmd,
    math_font_cmd,
    math_list_cmd,
    math_xml_cmd, // these are not real command codes...
    left_cmd,
    right_cmd,
    special_math_cmd,
    line_cmd,
    leave_v_mode_cmd,
    epsfbox_cmd,
    put_cmd,
    bezier_cmd,
    dashline_cmd,
    curves_cmd,
    thickness_cmd,
    bibliographystyle_cmd,
    insertbibliohere_cmd,
    footcitesep_cmd,
    expandtwoargs_cmd,
    removeelement_cmd,
    // These are mode independent
    first_mode_independent,
    case_shift_cmd,
    etex_cmd,
    xkeyval_cmd,
    makelabel_cmd,
    ignore_cmd,
    relax_cmd,
    nolinebreak_cmd,
    ignore_one_argument_cmd,
    ignore_two_argument_cmd,
    defineverbatimenv_cmd,
    saveverb_cmd,
    makeatletter_cmd,
    makeatother_cmd,
    add_to_macro_cmd,
    numberedverbatim_cmd,
    unnumberedverbatim_cmd,
    after_assignment_cmd,
    un_box_cmd,
    extension_cmd,
    setlanguage_cmd,
    xray_cmd,
    move_cmd,
    leader_ship_cmd,
    tracingall_cmd,
    newif_cmd,
    newcount_cmd,
    newboolean_cmd,
    setboolean_cmd,
    for_cmd,
    kvo_family_cmd,
    ifthenelse_cmd,
    whiledo_cmd,
    shortverb_cmd,
    newcounter_cmd,
    aftergroup_cmd,
    ifstar_cmd,
    ifnextchar_cmd,
    calc_cmd,
    fp_cmd,
    fpif_cmd,
    fpi_cmd, // commands from the fp package,
    verb_cmd,
    thm_aux_cmd,
    start_thm_cmd,
    setmode_cmd,
    testopt_cmd,
    sp_deflist_cmd,
    selective_sanitize_cmd,
    latex_error_cmd,
    change_element_name_cmd,
    check_date_cmd,
    formatdate_cmd,
    XML_swap_cmd,
    XML_fetch_cmd,
    XML_modify_cmd,
    GetIdInfo_cmd,
    GetIdInfoLog_cmd,
    loadlatex3_cmd,
    l3_gen_cond_Npnn_cmd,
    l3_gen_cond_Nnn_cmd,
    l3_gen_eq_cond_cmd,
    l3_check_cmd,
    l3_generate_variant_cmd,
    l3_gen_from_sig_cmd,
    l3_gen_from_ac_cmd,
    l3_set_cat_cmd,
    l3_set_num_cmd,
    tl_basic_cmd,
    tl_concat_cmd,
    tl_set_cmd,
    tl_put_left_cmd,
    l3_rescan_cmd,
    // From now on these are ok for \the
    min_internal,
    char_given_cmd,
    math_given_cmd,
    last_item_cmd,
    // Commands from here may be prefixed with \global
    max_non_prefixed_command,
    toks_register_cmd,
    assign_toks_cmd,
    assign_int_cmd,
    assign_dimen_cmd,
    assign_glue_cmd,
    assign_mu_glue_cmd,
    assign_font_dimen_cmd,
    assign_font_int_cmd,
    assign_enc_char_cmd,
    set_aux_cmd,
    set_prev_graf_cmd,
    set_page_dimen_cmd,
    set_page_int_cmd,
    set_box_dimen_cmd,
    set_shape_cmd,
    def_code_cmd,
    def_family_cmd,
    set_font_cmd,
    def_font_cmd,
    register_cmd,
    set_mathprop_cmd,
    set_mathchar_cmd,

    max_internal,
    advance_cmd,
    multiply_cmd,
    divide_cmd,
    prefix_cmd,
    let_cmd,
    shorthand_def_cmd,
    read_to_cs_cmd,
    def_cmd,
    set_box_cmd,
    set_interaction_cmd,

    max_command, // After this, command is expanded
    undef_cmd,
    expandafter_cmd,
    noexpand_cmd,
    input_cmd,
    if_test_cmd,
    fi_or_else_cmd,
    csname_cmd,
    convert_cmd,
    the_cmd,
    top_bot_mark_cmd,
    // latex ommands
    xspace_cmd,
    ensuremath_cmd,
    multispan_cmd,
    zapspace_cmd,
    stripprefix_cmd,
    latex_ctr_cmd,
    hexnumber_cmd,
    all_of_one_cmd,
    first_of_two_cmd,
    first_of_three_cmd,
    first_of_four_cmd,
    ignore_n_args_cmd,
    prg_return_cmd,
    afterfi_cmd,
    afterelsefi_cmd,
    ifempty_cmd,
    ifundefined_cmd,
    get_config_cmd,
    strippt_cmd,
    obracket_cmd,
    oparen_cmd,
    scan_up_down_cmd,
    sideset_cmd,
    specchar_cmd,
    car_cmd,
    split_cmd,
    gobble_cmd,
    refstepcounter_cmd,
    month_day_cmd,
    mathversion_cmd,
    a_cmd,
    accent_cmd,
    while_cmd,
    iwhile_cmd,
    loop_cmd,
    counter_cmd,
    setlength_cmd,
    useverb_cmd,
    random_cmd,
    ot2enc_cmd,
    pdfstrcmp_cmd,
    splitfun_cmd,
    usename_cmd,
    l3expand_aux_cmd,
    l3expand_base_cmd,
    l3noexpand_cmd,
    l3_ifx_cmd,
    l3str_ifeq_cmd,
    l3str_case_cmd,
    l3E_set_num_cmd,
    cat_ifeq_cmd,
    token_if_cmd,
    // keep these 8 in order at the end
    user_cmd,
    userl_cmd,
    userp_cmd,
    userlp_cmd,
    usero_cmd,
    userlo_cmd,
    userpo_cmd,
    userlpo_cmd,
    eof_marker_cmd // invalid command code
};

// Subtypes associated to a type. A given integer has more than one meaning.
enum subtypes {
    // pointers into eqtb_int_table
    cat_code_offset  = 0,
    math_code_offset = cat_code_offset + nb_characters,
    lc_code_offset   = math_code_offset + nb_characters,
    uc_code_offset   = lc_code_offset + nb_characters,
    sf_code_offset   = uc_code_offset + nb_characters,
    del_code_offset  = sf_code_offset + nb_characters,
    count_reg_offset = del_code_offset + nb_characters,
    mu_reg_offset    = count_reg_offset + nb_registers,
    other_int_offset = mu_reg_offset + nb_registers,
    // some integer parameters
    pretolerance_code = other_int_offset,
    tolerance_code,
    linepenalty_code,
    hyphenpenalty_code,
    exhyphenpenalty_code,
    clubpenalty_code,
    widowpenalty_code,
    displaywidowpenalty_code,
    brokenpenalty_code,
    binoppenalty_code,
    relpenalty_code,
    predisplaypenalty_code,
    postdisplaypenalty_code,
    interlinepenalty_code,
    doublehyphendemerits_code,
    finalhyphendemerits_code,
    adjdemerits_code,
    mag_code,
    delimiterfactor_code,
    looseness_code,
    time_code,
    day_code,
    month_code,
    year_code,
    showboxbreadth_code,
    showboxdepth_code,
    hbadness_code,
    vbadness_code,
    pausing_code,
    tracingonline_code,
    tracingmacros_code,
    tracingstats_code,
    tracingparagraphs_code,
    tracingpages_code,
    tracingoutput_code,
    tracinglostchars_code,
    tracingcommands_code,
    tracingrestores_code,
    tracingassigns_code,
    tracinggroups_code,
    tracingifs_code,
    tracingmath_code,
    tracingscantokens_code,
    tracingnesting_code,
    TeXXetstate_code,
    uchyph_code,
    outputpenalty_code,
    maxdeadcycles_code,
    hangafter_code,
    floatingpenalty_code,
    globaldefs_code,
    fam_code,
    escapechar_code,
    defaulthyphenchar_code,
    defaultskewchar_code,
    endlinechar_code,
    newlinechar_code,
    language_code,
    lefthyphenmin_code,
    righthyphenmin_code,
    holdinginserts_code,
    errorcontextlines_code,
    incentering_code,
    fpseed_code,
    list_depth_code,
    list_ctr_code,
    nomath_code,
    notrivialmath_code,
    multimlabel_code,
    cur_font_loc,
    predisplaydirection_code,
    lastlinefit_code,
    savingdiscards_code,
    savinghyphcodes_code,
    atmathversion_code,
    mathprop_ctr_code,
    use_subfigure_code,
    textfont_code,
    scriptfont_code       = textfont_code + 16,
    scriptscriptfont_code = scriptfont_code + 16,
    math_font_pos         = scriptscriptfont_code + 16,
    integer_table_size,
    // some dimen parameters
    parindent_code = nb_registers,
    mathsurround_code,
    lineskiplimit_code,
    hsize_code,
    vsize_code,
    maxdepth_code,
    splitmaxdepth_code,
    boxmaxdepth_code,
    hfuzz_code,
    vfuzz_code,
    delimitershortfall_code,
    nulldelimiterspace_code,
    scriptspace_code,
    predisplaysize_code,
    displaywidth_code,
    displayindent_code,
    overfullrule_code,
    hangindent_code,
    hoffset_code,
    voffset_code,
    emergencystretch_code,
    unitlength_code,
    textheight_code,
    textwidth_code,
    linewidth_code,
    columnwidth_code,
    // some mu glue
    dimension_table_size,

    // pointers into toks_registers
    output_code = nb_registers,
    everypar_code,
    everymath_code,
    everydisplay_code,
    everyhbox_code,
    everyvbox_code,
    everyjob_code,
    everycr_code,
    errhelp_code,
    theorem_style_code,
    theorem_bodyfont_code,
    theorem_headerfont_code,
    thm_unused_code,
    everyxbox_code,
    everyeof_code,
    everybibitem_code,
    toks_register_size,

    // pointers into glue_table
    lineskip_code = nb_registers,
    baselineskip_code,
    parskip_code,
    abovedisplayskip_code,
    belowdisplayskip_code,
    abovedisplayshortskip_code,
    belowdisplayshortskip_code,
    leftskip_code,
    rightskip_code,
    topskip_code,
    splittopskip_code,
    tabskip_code,
    spaceskip_code,
    xspaceskip_code,
    parfillskip_code,
    calcAskip_code,
    calcBskip_code,
    thinmuskip_code,
    medmuskip_code,
    thickmuskip_code,
    muskip_reg_offset,
    glue_table_size = muskip_reg_offset + nb_registers,

    noexpand_code = 0,
    chartoobig,
    relax_code = nb_characters,
    //  for section_cmd,
    part_code = 0,
    chapter_code,
    section_code,
    subsection_code,
    subsubsection_code,
    paragraph_code,
    subparagraph_code,
    endsec_code,
    toplevel_sec_code,
    // for cite_cmd
    cite_code = 0,
    footcite_code,
    nocite_code,
    refercite_code,
    yearcite_code,
    natcite_code,
    natcite_e_code,
    // for skip_cmd
    smallskip_code = 0,
    medskip_code,
    bigskip_code,
    // for hfill vfill
    hfil_code = 1,
    hfill_code,
    hfilneg_code,
    hss_code,
    vfil_code = 1,
    vfill_code,
    vfilneg_code,
    vss_code,
    // for fonts
    rm_family_code = 0,
    sf_family_code,
    tt_family_code,
    md_series_code,
    bf_series_code,
    up_shape_code,
    it_shape_code,
    sl_shape_code,
    sc_shape_code,
    em_code,
    normalfont_code,
    // for fontsize_cmd, dont change the order
    generic_size_code = 0,
    Tiny_code         = 1,
    tiny_code,
    scriptsize_code,
    footnotesize_code,
    small_code,
    normalsize_code,
    large_code,
    Large_code,
    LARGE_code,
    huge_code,
    Huge_code,
    // fort box_cmd
    // for soul
    soul_sup_code = 0,
    soul_sub_code,
    soul_oldstyle_code,
    soul_caps_code,
    soul_hl_code,
    soul_so_code,
    soul_st_code,
    soul_ul_code,
    mbox_code = 0,
    text_code,
    makebox_code,
    // for math_comp
    ord_noad = 0,
    op_noad,
    bin_noad,
    rel_noad,
    open_noad,
    close_noad,
    punct_noad,
    inner_noad,
    under_noad,
    over_noad,
    between_noad,
    // for big_cmd
    big_code = 0,
    Big_code,
    bigg_code,
    Bigg_code,
    bigl_code,
    Bigl_code,
    biggl_code,
    Biggl_code,
    bigr_code,
    Bigr_code,
    biggr_code,
    Biggr_code,
    bigm_code,
    Bigm_code,
    biggm_code,
    Biggm_code,
    // for style_cmd
    displaystyle_code = 0,
    textstyle_code,
    scriptstyle_code,
    scriptscriptstyle_code,
    // for over_cmd
    above_code = 0,
    over_code,
    atop_code,
    abovewithdelims_code,
    overwithdelims_code,
    atopwithdelims_code,
    // for centering_code
    center_code = 1,
    quote_code,
    quotation_code,
    flushleft_code,
    flushright_code,
    verse_code,
    // for fbox_cmd
    fbox_code = 0,
    framebox_code,
    rotatebox_code,
    scalebox_code,
    dashbox_code,
    raisebox_code,
    // for cr
    cr_code = 0,
    crcr_code,
    crwithargs_code,
    mycr_code,
    // for eqno
    eqno_code = 0,
    leqno_code,
    hrule_code = 0,
    vrule_code,
    rule_code,
    // for \char_set_mathcode:nn and variants
    setcat_code = 0,
    thecat_code,
    showcat_code,
    setmath_code,
    themath_code,
    showmath_code,
    setlc_code,
    thelc_code,
    showlc_code,
    setuc_code,
    theuc_code,
    showuc_code,
    setsf_code,
    thesf_code,
    showsf_code,
    tok_eq_cat_code = 0,
    tok_eq_char_code,
    tok_eq_meaning_code,
    tok_if_macro_code,
    tok_if_cs_code,
    tok_if_expandable_code,
    tok_if_long_code,
    tok_if_prot_code,
    tok_if_longprot_code,
    tok_if_chardef_code,
    tok_if_mathchardef_code,
    tok_if_dim_code,
    tok_if_skip_code,
    tok_if_muskip_code,
    tok_if_toks_code,
    tok_if_int_code,
    tok_if_primitive_code,
    // for unimp
    accent_code = 0,
    delimiter_code,
    halign_code,
    ignorespaces_code,
    insert_code,
    mark_code,
    marks_code,
    mathaccent_code,
    mathchar_code,
    noalign_code,
    noboundary_code,
    nonscript_code,
    omit_code,
    penalty_code,
    radical_code,
    vadjust_code,
    valign_code,
    vcenter_code,
    span_code,
    dump_code,
    message_code,
    errmessage_code,
    atatend_code,
    widthof_code,
    heightof_code,
    depthof_code,
    discretionary_code,
    textquotestraightbase_code,
    textquotestraightdblbase_code,
    textlbrackdbl_code,
    textrbrackdbl_code,
    textcompwordkmark_code,
    texttildelow_code,
    textcentoldstyle_code,
    textdollaroldstyle_code,
    textcopyleft_code,
    textzerooldstyle_code,
    textoneoldstyle_code,
    texttwooldstyle_code,
    textthreeoldstyle_code,
    textfouroldstyle_code,
    textfiveoldstyle_code,
    textsixoldstyle_code,
    textsevenoldstyle_code,
    texteightoldstyle_code,
    textnineoldstyle_code,
    textcapitalcompwordmark_code,
    textguarani_code,
    textinterrobangdown_code,
    textdiscount_code,
    textascendercompwordmark_code,
    textdblhyphen_code,
    textleaf_code,
    textdied_code,
    textdivorced_code,
    textborn_code,
    textmarried_code,
    textblank_code,
    allowbreak_code,
    abort_code,
    sleep_code,
    prompt_code,
    l3_p_code = 0,
    l3_TF_code,
    l3_T_code,
    l3_F_code,
    l3_bad_code,
    l3_p_NN_code = 0,
    l3_TF_NN_code,
    l3_T_NN_code,
    l3_F_NN_code, // 4 times 4 in order
    l3_p_Nc_code,
    l3_TF_Nc_code,
    l3_T_Nc_code,
    l3_F_Nc_code,
    l3_p_cN_code,
    l3_TF_cN_code,
    l3_T_cN_code,
    l3_F_cN_code,
    l3_p_cc_code,
    l3_TF_cc_code,
    l3_T_cc_code,
    l3_F_cc_code,
    l3expN_code = 0,
    l3expn_code,
    l3expp_code,
    l3expc_code,
    l3expo_code,
    l3expf_code,
    l3expx_code,
    l3expV_code,
    l3expv_code,
    l3expfu_code,
    l3expou_code,
    l3expvu_code,
    l3expVu_code,
    l3expxu_code,
    // composition of the previous code
    l3exp_No_code = 0,
    l3exp_NNo_code,
    l3exp_NNNo_code,
    l3exp_NNc_code,
    l3exp_Ncc_code,
    l3exp_Nccc_code,
    l3exp_Nf_code,
    l3exp_NNf_code,
    l3exp_Nv_code,
    l3exp_NNv_code,
    l3exp_NV_code,
    l3exp_NNV_code,
    l3exp_NNNV_code,
    l3exp_Nco_code,
    l3exp_Ncf_code,
    l3exp_NVV_code,
    l3exp_NcNc_code,
    l3exp_Ncco_code,
    l3exp_Nx_code,
    l3exp_Nnc_code,
    l3exp_Nfo_code,
    l3exp_Nff_code,
    l3exp_Nnf_code,
    l3exp_Nno_code,
    l3exp_NnV_code,
    l3exp_Noo_code,
    l3exp_Nof_code,
    l3exp_Noc_code,
    l3exp_NNx_code,
    l3exp_Ncx_code,
    l3exp_Nnx_code,
    l3exp_Nox_code,
    l3exp_Nxo_code,
    l3exp_Nxx_code,
    l3exp_NNno_code,
    l3exp_NNoo_code,
    l3exp_Nnnc_code,
    l3exp_Nnno_code,
    l3exp_Nooo_code,
    l3exp_NNnx_code,
    l3exp_NNox_code,
    l3exp_Nnnx_code,
    l3exp_Nnox_code,
    l3exp_Nccx_code,
    l3exp_Ncnx_code,
    l3exp_Noox_code,
    l3exp_NVu_code,
    l3exp_Nvu_code,
    l3exp_Nou_code,
    l3exp_Nfu_code,
    l3exp_Ncou_code,
    l3exp_NcVu_code,
    l3exp_NNVu_code,
    l3exp_NNou_code,
    l3exp_NNNVu_code,
    l3exp_NNNou_code,
    l3exp_Nnou_code,
    l3exp_Noou_code,
    l3exp_Nfou_code,
    l3exp_NnNou_code,
    l3exp_Nxu_code,
    l3exp_Nouou_code,
    l3_tl_new_code = 0,
    l3_tl_clear_code,
    l3_tl_gclear_code,
    l3_tl_const_code,
    l3_tl_xconst_code,
    l3_tl_clearnew_code,
    l3_tl_gclearnew_code,
    l3_tlx_new_code,
    l3_tlx_clear_code,
    l3_tlx_gclear_code,
    l3_tlx_const_code,
    l3_tlx_xconst_code,
    l3_tlx_clearnew_code,
    l3_tlx_gclearnew_code,
    // for unimp_font
    DeclareTextCommandDefault_code = 0,
    ProvideTextCommand_code,
    ProvideTextCommandDefault_code,
    TextSymbolUnavailable_code,
    DeclareTextCommand_code,
    DeclareTextSymbolDefault_code,
    UseTextSymbol_code,
    UndeclareTextCommand_code,
    DeclareFontEncodingDefaults_code,
    DeclareSizeFunction_code,
    DeclareTextAccent_code,
    UseTextAccent_code,
    DeclareTextSymbol_code,
    DeclareFontFamily_code,
    DeclareFontEncoding_code,
    DeclareTextCompositeCommand_code,
    DeclareTextComposite_code,
    DeclareFontSubstitution_code,
    DeclarePreloadSizes_code,
    DeclareMathSizes_code,
    DeclareErrorFont_code,
    DeclareFontShape_code,
    DeclareFixedFont_code,
    DeclareMathVersion_code,
    DeclareSymbolFont_code,
    SetSymbolFont_code,
    DeclareMathAlphabet_code,
    SetMathAlphabet_code,
    DeclareMathAccent_code,
    DeclareMathSymbol_code,
    DeclareMathDelimiter_code,
    DeclareMathRadical_code,
    DeclareSymbolFontAlphabet_code,
    DeclareTextFontCommand_code,
    DeclareOldFontCommand_code,
    setfontsize_code,
    setsize_code,
    // for index
    index_code = 0,
    glossary_code,
    printindex_code,
    printglossary_code,
    makeindex_code,
    makeglossary_code,
    newindex_code,
    // for scan_glue
    hskip_code = 1,
    vskip_code,
    mskip_code,
    // for make_box
    box_code = 0,
    copy_code,
    lastbox_code,
    vsplit_code,
    vtop_code,
    vbox_code,
    hbox_code,
    xbox_code,
    parbox_code,
    marginpar_code,
    usebox_code,
    useboxA_code,
    useboxB_code,
    //  for color
    definecolor_code = 0,
    color_code,
    normalcolor_code,
    pagecolor_code,
    colorbox_code,
    fcolorbox_code,
    color_offset,
    // for loops
    xkv_for_n_code = 0,
    xkv_for_en_code,
    for_code,
    tfor_code,
    forloop_code,
    iforloop_code,
    tforloop_code,
    breaktfor_code,
    xkv_breaktfor_code,
    xkv_for_i_code,
    xkv_for_o_code,
    xkv_for_eo_code,
    // for cst_cmd and cst1_cmd
    // iso-8859-1 codes in order starting with A0
    nobreakspace_code = 160,
    ss_code,
    i_code,
    napos_code,
    // other
    dots_code,
    ldots_code,
    quad_code,
    qquad_code,
    space_code,
    dollar_code,
    percent_code,
    amp_code,
    exclam_code,
    comma_code,
    lbrace_chr,
    rbrace_chr,
    j_code,
    underscore_code,
    sharp_code,
    textasciicircum_code,
    dash_code,
    numero_code,
    Numero_code,
    ier_code,
    iere_code,
    iers_code,
    ieres_code,
    ieme_code,
    iemes_code,
    textvisiblespace_code,
    textnospace_code,
    LaTeX_code,
    TeX_code,
    slash_code,
    textbackslash_code,
    null_code,
    SS_code,
    ouml_code,
    msharp_code,
    natural_code,
    flat_code,
    textasciigrave_code,
    textasciiacutex_code,
    textbullet_code,
    Hcaron_code,
    hcaron_code,
    tdagger_code,
    tddagger_code,
    nbsp_code,
    guillemet_fg_code,
    guillemet_og_code,
    emdash_code,
    endash_code,
    last_entity_code,
    // lower case is always one more than upper
    Udiamacro_cc = 0,
    udiamacro_cc,
    Udiaacute_cc,
    udiaacute_cc,
    Udiacaron_cc,
    udiacaron_cc,
    Udiagrave_cc,
    udiagrave_cc,
    Adiamacro_cc,
    adiamacro_cc,
    Adotmacro_cc,
    adotmacro_cc,
    Oogonmacron_cc,
    oogonmacron_cc,
    Odiamacro_cc,
    odiamacro_cc,
    Otilmacro_cc,
    otilmacro_cc,
    Odotmacro_cc,
    odotmacro_cc,
    Ccedilacute_cc,
    ccedilacute_cc,
    Ebaracute_cc,
    ebaracute_cc,
    Itremaacute_cc,
    itremaacute_cc,
    Otildeaigu_cc,
    otildeaigu_cc,
    Obaraigu_cc,
    obaraigu_cc,
    Sdotacute_cc,
    sdotacute_cc,
    Utildeacute_cc,
    utildeacute_cc,
    Aciracute_cc,
    aciracute_cc,
    Eciracute_cc,
    eciracute_cc,
    Acirtilde_cc,
    acirtilde_cc,
    Ebargrave_cc,
    ebargrave_cc,
    Acirgrave_cc,
    acirgrave_cc,
    Acirtilde,
    acirtilde,
    Ecedrond_cc,
    ecedrond_cc,
    Ldotbar_cc,
    ldotbar_cc,
    Rdotbar_cc,
    rdotbar_cc,
    Otildedp_cc,
    otildedp_cc,
    Obargrave_cc,
    obargrave_cc,
    Sdotcaron_cc,
    sdotcaron_cc,
    Sdotdot_cc,
    sdotdot_cc,
    Acirdot_cc,
    acirdot_cc,
    Abreveacute_cc,
    abreveacute_cc,
    Abrevegrave_cc,
    abrevegrave_cc,
    Abrevexx_cc,
    abrevexx_cc,
    Abrevetilde_cc,
    abrevetilde_cc,
    Abrevedot_cc,
    abrevedot_cc,
    Ecirgrave_cc,
    ecirgrave_cc,
    Ecirxx_cc,
    ecirxx_cc,
    Ecirtilde_cc,
    ecirtilde_cc,
    Ecirdot_cc,
    ecirdot_cc,
    Acirxx_cc,
    acirxx_cc,
    Ocirgrave_cc,
    ocirgrave_cc,
    Ociracute_cc,
    ociracute_cc,
    Ocirxx_cc,
    ocirxx_cc,
    Ocirtilde_cc,
    ocirtilde_cc,
    Ocirdot_cc,
    ocirdot_cc,
    Oacuteyy_cc,
    oacuteyy_cc,
    Ograveyy_cc,
    ograveyy_cc,
    Oxxyy_cc,
    oxxyy_cc,
    Otildeyy_cc,
    otildeyy_cc,
    Odotyy_cc,
    odotyy_cc,
    Uacuteyy_cc,
    uacuteyy_cc,
    Ugraveyy_cc,
    ugraveyy_cc,
    Uxxyy_cc,
    uxxyy_cc,
    Utildeyy_cc,
    utildeyy_cc,
    Udotyy_cc,
    udotyy_cc,
    unused_accent_even_cc,
    unused_accent_odd_cc,
    en_dash_coce,
    em_dash_code,
    special_table_length,
    // for file_cmd
    input_code = 0,
    endinput_code,
    inputifexists_code,
    ifexists_code,
    openin_code,
    closein_code,
    include_code,
    end_all_input_code,
    Input_code,
    scantokens_code,
    readxml_code,
    // for participant
    participant_code = 0,
    participante_code,
    participantes_code,
    participants_code,
    // ignore_env
    body_code = 0,
    abstract_code,
    latexonly_code,
    xmlonly_code,
    // ignore_content
    htmlonly_code = 0,
    rawhtml_code,
    LaTeXonly_code,
    comment_code,
    // parshape and others
    parshape_code = 0,
    interlinepenalties_code,
    clubpenalties_code,
    widowpenalties_code,
    displaywidowpenalties_code,
    // for put_cmd
    put_code = 0,
    line_code,
    vector_code,
    oval_code,
    multiput_code,
    scaleput_code,
    frame_code,
    arc_code = 0,
    bigcircle_code,
    closecurve_code,
    curve_code,
    tagcurve_code,
    dashline_code = 0,
    drawline_code,
    dottedline_code,
    circle_code,
    // math_env
    eqnarray_code = 0,
    eqnarray_star_code,
    equation_code,
    equation_star_code,
    multline_code,
    multline_star_code,
    gather_code,
    gather_star_code,
    aligned_code,
    gathered_code,
    split_code,
    math_code,
    displaymath_code,
    Beqnarray_code,
    Beqnarray_star_code,
    align_code,
    align_star_code,
    flalign_code,
    flalign_star_code,
    alignat_code,
    alignat_star_code,
    xalignat_code,
    xalignat_star_code,
    xxalignat_code,
    xxalignat_star_code,
    array_code,
    matrix_code,
    bordermatrix_code,
    matrixb_code,
    matrixB_code,
    matrixp_code,
    matrixV_code,
    matrixv_code,
    nomathenv_code,
    mbox_S_code,
    text_S_code,
    hbox_S_code,
    fbox_S_code,
    // xml_modify
    xml_get_code = 0,
    xml_set_code,
    xml_del_code,
    xml_ins_code,
    xml_parent_code,
    xml_setA_code,
    xml_setB_code,
    // for line_cmd
    leftline_code = 0,
    rightline_code,
    centerline_code,
    llap_code,
    rlap_code,
    // for last_item
    lastpenalty_code = 0,
    lastkern_code,
    lastskip_code,
    inputlineno_code,
    badness_code,
    xmlcurrentid_code,
    xmllastid_code,
    xmlAid_code,
    xmlBid_code,
    XMLboxname_code,
    XMLboxid_code,
    xmlAname_code,
    xmlBname_code,
    xmlAsize_code,
    xmlcurarray_code,
    xmlcurcell_code,
    xmlcurrow_code,
    currentgrouplevel_code,
    currentgrouptype_code,
    currentiflevel_code,
    currentiftype_code,
    currentifbranch_code,
    etexversion_code,
    fontcharwd_code,
    fontcharht_code,
    fontchardp_code,
    fontcharic_code,
    parshapelength_code,
    parshapeindent_code,
    parshapedimen_code,
    lastnodetype_code,
    numexpr_code,
    dimexpr_code,
    glueexpr_code,
    muexpr_code,
    gluestretchorder_code,
    glueshrinkorder_code,
    gluestretch_code,
    glueshrink_code,
    mutoglue_code,
    gluetomu_code,
    xgetfontsize_code,
    // fi_or_else
    if_code = 1,
    fi_code,
    else_code,
    or_code,
    // if_test_cmd; do not change the order of these
    if_char_code = 0,
    if_cat_code,
    if_int_code,
    if_dim_code,
    if_odd_code,
    if_vmode_code,
    if_hmode_code,
    if_mmode_code,
    if_inner_code,
    if_void_code,
    if_hbox_code,
    if_vbox_code,
    ifx_code,
    if_eof_code,
    if_true_code,
    if_false_code,
    if_case_code,
    if_defined_code,
    if_csname_code,
    if_fontchar_code,
    if_leapyear_code,
    unless_code = 32, // defined by etex
    // for newcount_cmd
    newtoks_code = 0,
    newcount_code,
    newbox_code,
    newdimen_code,
    newlength_code,
    newmuskip_code,
    newread_code,
    newwrite_code,
    newlanguage_code,
    // for def_cmd ; no modification before let_code
    def_code = 0,
    gdef_code,
    edef_code,
    xdef_code,
    ldef_code,
    lgdef_code,
    ledef_code,
    lxdef_code,
    pdef_code,
    pgdef_code,
    pedef_code,
    pxdef_code,
    pldef_code,
    plgdef_code,
    pledef_code,
    plxdef_code,
    defn_code,
    gdefn_code,
    edefn_code,
    xdefn_code,
    ldefn_code,
    lgdefn_code,
    ledefn_code,
    lxdefn_code,
    pdefn_code,
    pgdefn_code,
    pedefn_code,
    pxdefn_code,
    pldefn_code,
    plgdefn_code,
    pledefn_code,
    plxdefn_code,
    cdef_code,
    cgdef_code,
    cedef_code,
    cxdef_code,
    cldef_code,
    clgdef_code,
    cledef_code,
    clxdef_code,
    cpdef_code,
    cpgdef_code,
    cpedef_code,
    cpxdef_code,
    cpldef_code,
    cplgdef_code,
    cpledef_code,
    cplxdef_code,
    cdefn_code,
    cgdefn_code,
    cedefn_code,
    cxdefn_code,
    cldefn_code,
    clgdefn_code,
    cledefn_code,
    clxdefn_code,
    cpdefn_code,
    cpgdefn_code,
    cpedefn_code,
    cpxdefn_code,
    cpldefn_code,
    cplgdefn_code,
    cpledefn_code,
    cplxdefn_code,
    newcommand_code,
    newthm_code,
    newenv_code,
    renewenv_code,
    renew_code,
    provide_code,
    declare_math_operator_code,
    checkcommand_code,
    letNN_code = 0,
    letcN_code,
    letNc_code,
    letcc_code,
    gletNN_code,
    gletcN_code,
    gletNc_code,
    gletcc_code,
    nletNN_code,
    nletcN_code,
    nletNc_code,
    nletcc_code,
    let_code,
    futurelet_code,
    undef_code,
    undefc_code,

    // add_att
    addatt_to_cur_code = 0,
    addatt_to_last_code,
    addatt_to_doc_code,
    addatt_to_code,
    addatt_to_index_code,
    // ignore cmd
    htmlimage_code = 0,
    immediate_code,
    unpenalty_code,
    unkern_code,
    unskip_code,
    atsign_code,
    italiccorr_code,
    protect_code,
    sloppy_code,
    fussy_code,
    subitem_code,
    clearpage_code,
    cleardoublepage_code,
    break_code,
    nobreak_code,
    newpage_code,
    samepage_code,
    fillbreak_code,
    goodbreak_code,
    eject_code,
    smallbreak_code,
    medbreak_code,
    bigbreak_code,
    addnl_code,
    nointerlineskip_code,
    offinterlineskip_code,
    frenchspacing_code,
    nonfrenchspacing_code,
    showoverfull_code,
    loggingoutput_code,
    nofiles_code,
    showoutput_code,
    hrulefill_code,
    dotfill_code,
    pagediscards_code,
    splitdiscards_code,
    endL_code,
    endR_code,
    beginL_code,
    beginR_code,
    raggedbottom_code,
    flushbottom_code,
    onecolumn_code,
    twocolumn_code,
    normalmarginpar_code,
    reversemarginpar_code,
    normalbaselines_code,
    removelastskip_code,
    // ignore_one_arg_cmd
    RAlabel_code = 2,
    hyphenation_code,
    patterns_code,
    special_code,
    includeonly_code,
    fontencoding_code,
    fontfamily_code,
    fontseries_code,
    fontshape_code,
    showhyphens_code,
    // ignore_two_argument_cmd
    HTMLset_code = 1,
    fontsize_code,
    // linebreak_cmd
    pagebreak_code,
    nopagebreak_code,
    linebreak_code,
    nolinebreak_code,
    // fancy_cmd
    fancy_lhead_code,
    fancy_chead_code,
    fancy_rhead_code,
    fancy_lfoot_code,
    fancy_cfoot_code,
    fancy_rfoot_code,
    fancy_head_code,
    fancy_foot_code,
    fancy_hf_code,
    // extension_cmd
    openout_code = 1,
    write_code,
    closeout_code,
    write_log_code,
    write_term_code,
    typeout_code,
    wlog_code,
    // xray_cmd

    show_code = 0,
    showbox_code,
    showthe_code,
    showlists_code,
    showgroups_code,
    show_xmlA_code,
    show_xmlB_code,
    showtokens_code,
    showifs_code,
    register_show_code,
    registerc_show_code,
    unexpanded_code,
    detokenize_code, // awful hack, because  \showthe calls \the
    // shorthand_def_cmd
    char_def_code = 0,
    math_char_def_code,
    count_def_code,
    dimen_def_code,
    skip_def_code,
    mu_skip_def_code,
    toks_def_code,
    // top_bot_mark_cmd
    topmark_code = 0,
    firstmark_code,
    botmark_code,
    splitfirstmark_code,
    splitbotmark_code,
    topmarks_code,
    firstmarks_code,
    botmarks_code,
    splitfirstmarks_code,
    splitbotmarks_code,
    // leader_ship_cmd
    shipout_code = 1,
    leaders_code,
    cleaders_code,
    xleaders_code,
    // un_box_cmd
    unhbox_code = 0,
    unhcopy_code,
    unvbox_code,
    unvcopy_code,
    // convert_cmd
    number_code = 1,
    romannumeral_code,
    string_code,
    meaning_code,
    fontname_code,
    jobname_code,
    tralicsversion_code,
    etexrevision_code,
    rayear_code,
    Romannumeral_code,
    at_arabic_code,
    sanitize_code,
    twodigits_code,
    ra_jobname_code,
    attributeval_code,
    meaning_c_code,
    l3string_code,
    // the
    the_code = 0,
    // latex_ctr_cmd
    arabic_code = 0,
    roman_code,
    Roman_code,
    alph_code,
    Alph_code,
    fnsymbol_code,
    at_number_code,
    at_alph_code,
    at_Alph_code,
    at_fnsymbol_code,
    calcaux_code,
    // set_interaction_cmd
    batchmode_code = 0,
    nonstopmode_code,
    scrollmode_code,
    errorstopmode_code,
    // mathfont_cmd
    math_f_normal = 0,
    math_f_upright,
    math_f_bold,
    math_f_italic,
    math_f_bold_italic,
    math_f_script,
    math_f_bold_script,
    math_f_fraktur,
    math_f_doublestruck,
    math_f_bold_fraktur,
    math_f_sansserif,
    math_f_bold_sansserif,
    math_f_sansserif_italic,
    math_f_sansserif_bold_italic,
    math_f_monospace,
    // arg_font_cmd
    lsc_code = 0,
    fsc_code,
    // mathfont_cmd
    mathtt_code = 0,
    mathcal_code,
    mathbf_code,
    mathrm_code,
    mathit_code,
    mathbb_code,
    mathsf_code,
    mathnormal_code,
    cal_code,
    mathfrak_code,
    // counter_cmds
    stepcounter_code = 0,
    addtocounter_code,
    setcounter_code,
    value_code,
    killcounter_code,
    addtoreset_code,
    // prefix_cmd
    global_code    = 8,
    long_code      = 1,
    outer_code     = 4,
    protected_code = 2,
    // set_page_dimen_cmd
    pagegoal_code = 0,
    pagetotal_code,
    pagestretch_code,
    pagefilstretch_code,
    pagefillstretch_code,
    pagefilllstretch_code,
    pageshrink_code,
    pagedepth_code,
    // set_page_int_cmd
    deadcycles_code = 0,
    insertpenalties_code,
    interactionmode_code,
    // set_box_dimen_cmd
    wd_code = 0,
    ht_code,
    dp_code,
    // move_cmd
    moveleft_code = 0,
    moveright_code,
    raise_code,
    lower_code,
    // math commands (with arguments) and math accent codes
    mathchoice_code = 0,
    stackrel_code,
    underset_code,
    overset_code,
    frac_code,
    dfrac_code,
    tfrac_code,
    cfrac_code,
    genfrac_code,
    binom_code,
    tbinom_code,
    dbinom_code,
    root_code,
    mathlabel_code,
    mathbox_code,
    cell_attribute_code,
    row_attribute_code,
    formula_attribute_code,
    thismath_attribute_code,
    table_attribute_code,
    math_attribute_code,
    accentset_code,
    underaccent_code,
    multicolumn_code,
    last_marg_code = multicolumn_code, // following take 1 arg
    mathmi_code,
    mathmn_code,
    mathmo_code,
    mathci_code,
    mathcn_code,
    mathcsymbol_code,
    mathnothing_code,
    multiscripts_code,
    sqrt_code,
    operatorname_code,
    operatornamestar_code,
    boxed_code,
    overline_code,
    underline_code,
    overbrace_code,
    underbrace_code,
    undertilde_code,
    phantom_code,
    vphantom_code,
    hphantom_code,
    smash_code,
    atsmash_code,
    // now comes accent commands
    acute_code,
    first_maccent_code = acute_code,
    grave_code,
    ddot_code,
    tilde_code,
    widetilde_code,
    bar_code,
    breve_code,
    check_code,
    hat_code,
    widehat_code,
    vec_code,
    ddddot_code,
    dddot_code,
    mathring_code,
    overrightarrow_code,
    overleftarrow_code,
    overleftrightarrow_code,
    dot_code,
    xleftarrow_code,
    xrightarrow_code,
    underrightarrow_code,
    first_under_accent_code = underrightarrow_code,
    underleftrightarrow_code,
    underleftarrow_code,
    last_maccent_code = underleftarrow_code,
    qopname_code,
    last_math_code,
    math_marker_code = last_math_code + 1000,
    // thickness
    thicklines_code = 0,
    thinlines_code,
    linethickness_code,
    // for trees
    node_code = 0,
    nodepoint_code,
    nodeconnect_code,
    anodeconnect_code,
    nodecurve_code,
    anodecurve_code,
    nodebox_code,
    nodeoval_code,
    nodetriangle_code,
    nodecircle_code,
    barnodeconnect_code,
    abarnodeconnect_code,
    mainmatter_code = 0,
    frontmatter_code,
    backmatter_code,
    // month day names
    md_frenchm_code = 0,
    md_frenchd_code,
    md_englishm_code,
    md_englishd_code,
    md_germanm_code,
    md_germand_code,
    md_spanishm_code,
    md_spanishd_code,
    // decide whether to use \cs_set:Npn etc
    L3_set_code = 0,
    L3_new_code,
    L3_setp_code,
    L3_newp_code,
    // hacks
    zero_code = 0,
    one_code,
    two_code,
    three_code,
    four_code,
    fp_ident_code = 0,
    fp_print_code,
    fp_set_code,
    fp_add_code,
    fp_sub_code,
    fp_div_code,
    fp_mul_code,
    fp_abs_code,
    fp_neg_code,
    fp_iflt_code,
    fp_ifeq_code,
    fp_ifgt_code,
    fp_ifneg_code,
    fp_ifpos_code,
    fp_ifzero_code,
    fp_ifint_code,
    fp_min_code,
    fp_max_code,
    fp_sgn_code,
    fp_seed_code,
    fp_random_code,
    fp_round_code,
    fp_trunc_code,
    fp_clip_code,
    fp_eval_code,
    fp_upn_code,
    fp_e_code,
    fp_exp_code,
    fp_ln_code,
    fp_pow_code,
    fp_root_code,
    fp_sin_code,
    fp_cos_code,
    fp_sincos_code,
    fp_tan_code,
    fp_cot_code,
    fp_tancot_code,
    fp_arcsin_code,
    fp_arccos_code,
    fp_arcsincos_code,
    fp_arctan_code,
    fp_arccot_code,
    fp_arctancot_code,
    fp_lsolve_code,
    fp_qsolve_code,
    fp_csolve_code,
    fp_qqsolve_code,
    fp_pascal_code,
    fp_last_code,
    boot_keyval_code = 0,
    definekey_code,
    xdefinekey_code,
    define_cmdkey_code,
    define_cmdkeys_code,
    define_choicekey_code,
    define_cc_code,
    define_boolkey_code,
    define_boolkeys_code,
    key_ifundefined_code,
    disable_keys_code,
    save_keys_code,
    delsave_keys_code,
    unsave_keys_code,
    preset_keys_code,
    delpreset_keys_code,
    unpreset_keys_code,
    gsave_keys_code,
    gdelsave_keys_code,
    gunsave_keys_code,
    gpreset_keys_code,
    gdelpreset_keys_code,
    gunpreset_keys_code,
    setrmkeys_code,
    setkeys_code,
    declare_optionsX_code,
    execute_optionsX_code,
    process_optionsX_code,
    classerror_code = 0,
    classwarning_code,
    classwarningnoline_code,
    classinfo_code,
    packageerror_code,
    packagewarning_code,
    packagewarningnoline_code,
    packageinfo_code,
    genericerror_code,
    genericinfo_code,
    genericwarning_code,
    messagebreak_code,
    latexerror_code,
    latexwarning_code,
    latexwarningnoline_code,
    latexinfo_code,
    latexinfonoline_code,
    kvo_fam_set_code = 0,
    kvo_fam_get_code,
    kvo_pre_set_code,
    kvo_pre_get_code,
    kvo_bool_opt_code,
    kvo_comp_opt_code,
    kvo_boolkey_code,
    kvo_string_opt_code,
    kvo_void_opt_code,
    kvo_voidkey_code,
    kvo_disable_code,
    kvo_decdef_code,
    kvo_process_code,
    // letters
    letter_ucode  = 'u',
    letter_vcode  = 'v',
    letter_ticode = '~'
};

// nb_characters*cur_cmd for catcode 11 and 12.
enum spec_offsets {
    letter_t_offset    = letter_catcode * nb_characters,
    other_t_offset     = other_catcode * nb_characters,
    hat_t_offset       = hat_catcode * nb_characters,
    space_t_offset     = space_catcode * nb_characters,
    ampersand_t_offset = alignment_catcode * nb_characters,
    RB_limit           = 3 * nb_characters,
    CB_t_offset        = 2 * nb_characters,
    OB_t_offset        = 1 * nb_characters,
    eol_t_offset       = nb_characters * eol_catcode,
    dollar_t_offset    = nb_characters * dollar_catcode,
    dollar_limit       = nb_characters * (dollar_catcode + 1),
};

// if you want \footnote to translate to <FootNote>, you have to
// modify an entry of the_names at position np_footnote
enum name_positions {
    cst_empty,
    cst_invalid,
    cst_flaghi,
    cst_accent,
    cst_argument,
    cst_biblio,
    cst_div0,
    cst_div1,
    cst_div2,
    cst_div3,
    cst_div4,
    cst_div5,
    cst_div6,
    cst_document,
    cst_composition,
    cst_elt,
    cst_fonts,
    cst_foot,
    cst_hanl,
    cst_hi,
    cst_math,
    // note: use same order as mathmi_code etc
    cst_mi,
    cst_mn,
    cst_mo,
    cst_ci,
    cst_cn,
    cst_csymbol,
    cst_nothing,
    cst_multiscripts,
    cst_mover,
    cst_mrow,
    cst_mroot,
    cst_mrow_cst,
    cst_munderover,
    cst_msqrt,
    cst_msub,
    cst_mstyle,
    cst_msubsup,
    cst_msup,
    cst_mspace,
    cst_mtable,
    cst_mtd,
    cst_mtr,
    cst_mtext,
    cst_munder,
    cst_mref,
    cst_nl,
    cst_p,
    cst_particip,
    cst_rasection,
    cst_refer,
    cst_temporary,
    // For the biblio
    cstb_article,
    cstb_book,
    cstb_booklet,
    cstb_conference,
    cstb_coursenotes,
    cstb_comment,
    cstb_inbook,
    cstb_incollection,
    cstb_inproceedings,
    cstb_manual,
    cstb_mastersthesis,
    cstb_masterthesis,
    cstb_misc,
    cstb_phdthesis,
    cstb_proceedings,
    cstb_preamble,
    cstb_techreport,
    cstb_string,
    cstb_unpublished,
    cstb_extension,
    cstb_address,
    cstb_author,
    cstb_booktitle,
    cstb_chapter,
    cstb_crossref,
    cstb_doi,
    cstb_edition,
    cstb_editor,
    cstb_howpublished,
    cstb_institution,
    cstb_isbn,
    cstb_issn,
    cstb_isrn,
    cstb_journal,
    cstb_key,
    cstb_month,
    cstb_language,
    cstb_langue,
    cstb_note,
    cstb_number,
    cstb_organization,
    cstb_pages,
    cstb_publisher,
    cstb_school,
    cstb_series,
    cstb_title,
    cstb_type,
    cstb_url,
    cstb_volume,
    cstb_year,
    cstb_unknown,
    cstb_equipe,
    cstb_subtype,
    cstb_unite,
    cstb_statut,
    cstb_section,
    // other values
    np_a1,
    np_a2,
    np_accueil,
    np_theorem_head,
    np_angle,
    np_arc,
    np_array,
    np_alt_caption,
    np_alt_section,
    np_alternatives,
    np_arg1,
    np_arg2,
    np_arg3,
    np_b1,
    np_b2,
    np_b_rend,
    np_bauteurs,
    np_bediteurs,
    np_bezier,
    np_biblio,
    np_bigcircle,
    np_border_rightw,
    np_border_leftw,
    np_box,
    np_boxed,
    np_bpers,
    np_c1,
    np_c2,
    np_caption,
    np_captions,
    np_catperso,
    np_cell,
    np_center_etc,
    np_center_etc1,
    np_center_etc2,
    np_center_etc3,
    np_center_etc4,
    np_center_etc5,
    np_center_etc6,
    np_centered,
    np_chapters,
    np_circle,
    np_cite_type,
    np_natcit,
    np_cit,
    np_citation,
    np_clip,
    np_close,
    np_closecurve,
    np_cols,
    np_curve,
    np_curve_nbpts,
    np_dashline,
    np_display,
    np_div0,
    np_div1,
    np_div2,
    np_div3,
    np_div4,
    np_div5,
    np_div6,
    np_dottedline,
    np_drawline,
    np_dx,
    np_dy,
    np_error,
    np_fbox,
    np_figure,
    np_float,
    np_float_figure,
    np_float_table,
    np_file,
    np_fileextension,
    np_full_first,
    np_font_small,
    np_font_small1,
    np_font_small2,
    np_font_small3,
    np_font_small4,
    np_font_large,
    np_font_large1,
    np_font_large2,
    np_font_large3,
    np_font_small5,
    np_font_large4,
    np_font_large5,
    np_font_normalsize,
    np_font_large6,
    np_font_small6,
    np_font_it,
    np_font_slanted,
    np_font_sc,
    np_font_upright,
    np_font_medium,
    np_font_sansserif,
    np_font_tt,
    np_font_bold,
    np_font_roman,
    np_font_boldextended,
    np_font_semibold,
    np_font_condensed,
    np_footnote,
    np_formula,
    np_foot,
    np_framed,
    np_from,
    np_full,
    np_glo_name,
    np_graphics,
    np_head,
    np_header,
    np_hfil,
    np_hfill,
    np_hfilneg,
    np_hss,
    np_html,
    np_id,
    np_isproject,
    np_item,
    np_junior,
    np_key,
    np_keywords,
    np_idtext,
    np_leg,
    np_linethickness,
    np_label_item,
    np_label_glo,
    np_line,
    np_lineC,
    np_line_thickness,
    np_mbox,
    np_minipage,
    np_module,
    np_moreinfo,
    np_multiput,
    np_noindent,
    np_nonumber,
    np_nom,
    np_open,
    np_warning,
    np_oval,
    np_overline,
    np_page,
    np_part,
    np_part0,
    np_part1,
    np_part2,
    np_part3,
    np_particle,
    np_pers,
    np_picture,
    np_point,
    np_pre,
    np_prenom,
    np_pos,
    np_posi,
    np_prenote,
    np_projet,
    np_projetdeveloppe,
    np_put,
    np_quoted,
    np_r_angle,
    np_ref,
    np_repeat,
    np_rotatebox,
    np_row,
    np_rule,
    np_scale,
    np_scaleput,
    np_frame,
    np_dashbox,
    np_sc,
    np_s_scale,
    np_sbox,
    np_size,
    np_stylesheet,
    np_stylesheet_type,
    np_simplemath,
    np_spaceafter,
    np_spacebefore,
    np_subfigure,
    np_table,
    np_Table,
    np_totalwidth,
    np_tabular,
    np_tabular_star,
    np_tagcurve,
    np_term,
    np_texmath,
    np_texte,
    np_theme,
    np_thick_lines,
    np_thin_lines,
    np_toc,
    np_toc1,
    np_toc2,
    np_underline,
    np_unknown,
    np_unit_length,
    np_url,
    np_userid,
    np_vfil,
    np_vfill,
    np_vfilneg,
    np_vss,
    np_xscale,
    np_xscaley,
    np_xdir,
    np_glossary,
    np_theglossary,
    np_xref,
    np_vector,
    np_yscale,
    np_yscalex,
    np_ydir,
    np_vpos,
    np_tab_width,
    np_minipage_width,
    np_box_width,
    np_3pt,
    np_6pt,
    np_12pt,
    np_affiliation,
    np_profession,
    np_hdr,
    np_research_centre,
    np_node,
    np_nodeconnect,
    np_anodeconnect,
    np_nodecurve,
    np_nodebox,
    np_nodeoval,
    np_nodetriangle,
    np_barnodeconnect,
    np_abarnodeconnect,
    np_nodecircle,
    np_anodecurve,
    np_mainmatter,
    np_frontmatter,
    np_backmatter,
    np_index,
    np_encap,
    np_level,
    np_anchor,
    np_leaders,
    np_cleaders,
    np_xleaders,
    np_theindex,
    np_allowbreak,
    np_bibitem,
    np_rclist,
    np_rcval,
    np_rasection,
    np_pagecolor,
    np_color,
    np_color2,
    // keep these in order
    np_s_sup,
    np_s_sub,
    np_s_old,
    np_s_caps,
    np_s_hl,
    np_s_so,
    np_s_st,
    np_s_ul,

    np_last,
};

enum system_type {
    st_windows,
    st_decalpha,
    st_solaris,
    st_sgi,
    st_linux,
    st_apple,
    st_hp,
    st_unknown,
};

enum {
    last_register = nb_registers - 1, // last valid register
    setbox_offset = nb_registers,
    setbox_last   = setbox_offset + nb_registers - 1,
    move_location,
    makebox_location,
    xmlA_location,
    xmlB_location,
    shipout_location,
    leaders_location,
    cleaders_location,
    xleaders_location,
};

enum {
    nb_input_channels  = 16, // number of input channels
    tty_in_chan        = 16,
    main_in_chan       = 17,
    token_in_chan      = 18,
    max_openin         = nb_input_channels - 1,
    max_openout        = max_openin,
    positive_out_slot  = 16, // means log and tty
    negative_out_slot  = 17, // means log
    write18_slot       = 18, // means shell
    nb_output_channels = 19
};

enum output_encoding_type {
    en_boot,
    en_utf8,
    en_ascii7,
    en_ascii8,
    en_latin,
};

enum math_style { ms_D, ms_T, ms_S, ms_SS };

// symbolic code for the unit in a case like: \vskip 3cm
enum { unit_pt, unit_in, unit_pc, unit_cm, unit_mm, unit_bp, unit_dd, unit_cc, unit_sp };

// A command defined by \newcommand\foo[...][...]{...}, i.e. LaTeX style
// with optional argument has type dt_optional. Otherwise,
// a definition like \def\foo{...} is dt_normal in the case the argument list
// is empty, #1, #1#2, #1#2#3, etc; it is dt_brace if there is # before
// the opening brace, like \def\foo#1#{...}, it is dt_delim otherwise
// dt_empty holds for \def\foo{}; dt_spec_opt says opt arg is [\@dblarg]
enum def_type {
    dt_normal,
    dt_optional,
    dt_delim,
    dt_brace,
    dt_empty,
    dt_spec_opt,
};

enum tpa_line { tl_normal, tl_end, tl_empty };

enum nl_to_tok { nlt_space, nlt_cr, nlt_nl };

// Character type for the bibtex parser
// in fact, since only the test with lex_numeric is used,
// this is now useless.
enum lex_type { lex_illegal, lex_white_space, lex_alpha, lex_numeric, lex_sep_char, lex_open_bra, lex_close_bra, lex_other };

// is char valid for a bibtex entry name ?
enum id_type { illegal_id_char, legal_id_char };

// is this citation from foot_bib, refer_bib or normal bib ?
// Is this bibentry for foot, refer, year or all?
enum bib_from { from_foot, from_refer, from_year, from_any };

// the type of something like @ARTICLE
enum entry_type {
    type_article,
    type_book,
    type_booklet,
    type_inbook,
    type_incollection,
    type_inproceedings,
    type_conference,
    type_manual,
    type_masterthesis,
    type_misc,
    type_phdthesis,
    type_coursenotes,
    type_proceedings,
    type_techreport,
    type_unpublished,
    type_unknown,
    type_comment,
    type_preamble,
    type_string,
    type_extension,
};

enum c_primaire { cp_art, cp_aut, cp_bre, cp_col, cp_cov, cp_ouv, cp_rap, cp_tru, cp_last };
enum c_secondaire {
    cs_acl,
    cs_scl,
    cs_arp,
    cs_aud,
    cs_aut,
    cs_bdd,
    cs_car,
    cs_cat,
    cs_cou,
    cs_dtr,
    cs_log,
    cs_man,
    cs_pho,
    cs_son,
    cs_act,
    cs_com,
    cs_inv,
    cs_pos,
    cs_cor,
    cs_rch,
    cs_ann,
    cs_ctr,
    cs_rec,
    cs_mem,
    cs_tha,
    cs_the,
    cs_thn,
    cs_none_cov,
    cs_none_bre,
    cs_last
};

// We keep an entry because we have seen \nocite{*}, or \cite{foo}, or
// crossref=foo. We assume that min_crossref=infinity
enum bib_creator { because_all, because_cite, because_crossref };

// If an entry contains note="foo", then the type of the assignment will be
// fp_note. NOTE: fp_key must be 1,fp_crossref must be 0...
enum field_pos {
    fp_crossref = 0,
    fp_key,
    fp_address,
    fp_author,
    fp_booktitle,
    fp_chapter,
    fp_edition,
    fp_editor,
    fp_howpublished,
    fp_institution,
    fp_journal,
    fp_month,
    fp_note,
    fp_number,
    fp_organization,
    fp_pages,
    fp_publisher,
    fp_school,
    fp_series,
    fp_title,
    fp_type,
    fp_url,
    fp_volume,
    fp_year,
    fp_doi,
    fp_langue,
    fp_isbn,
    fp_issn,
    fp_isrn,
    fp_unknown
};

// For author={J.Grimm} to work, some hacks are needed.
// In the case of \'e, the first character is of type bct_cmd,
// the two others are bct_continuation. In case {\foo bar}, the first char
// is bct_brace, others are bct_continuation.
// bct_space, bct_tilde,bct_dash, bct_comma: obvious
// bct_dot is for the dot in J.Grimm, bct_bad is an error, bct_end is EOD
enum bchar_type {
    bct_normal,
    bct_space,
    bct_tilde,
    bct_dash,
    bct_comma,
    bct_cmd,
    bct_brace,
    bct_dot,
    bct_continuation,
    bct_extended,
    bct_end,
    bct_bad
};

// for push_level .. pop_level
enum boundary_type { bt_brace, bt_cell, bt_local, bt_semisimple, bt_esemisimple, bt_env, bt_tpa, bt_math, bt_impossible };

// Handles behaviour of \par in a command
enum l_state {
    ls_normal,
    ls_long,
    ls_bad,
};

enum scan_stat { ss_normal, ss_skipping, ss_defining, ss_matching, ss_aligning, ss_absorbing, ss_macro };

// the state says how to interpret white space.
// see texbook end of chapter 8.
enum states { state_N, state_S, state_M };

// to make a decision between \def, \newcommand, \renewcommand, \providecommand
enum rd_flag { rd_always, rd_if_defined, rd_if_undef, rd_skip, rd_never };

// Is this a Error Warning Info
enum msg_type { mt_error, mt_warning, mt_info, mt_none };

// suffix for:  2pt, 3fil,  4fill, 5filll, and 6
enum glue_spec {
    glue_spec_pt,
    glue_spec_fil,
    glue_spec_fill,
    glue_spec_filll,
    glue_spec_empty,
    glue_spec_mu,
};

// for titlepage
enum tpi_vals {
    tpi_zero,
    tpi_noval,
    tpi_elt,
    tpi_cmd,
    tpi_str,
    tpi_alias,
    tpi_execute,
    tpi_err,
    tpi_CESS,
    tpi_ACSS,
    tpi_CES,
    tpi_CEES,
    tpi_E,
    tpi_CE,
    tpi_CEE,
    tpi_CCS,
    tpi_AC,
    tpi_S,
    tpi_EC,
    tpi_rt_tp = 100,
    tpi_rt_normal,
    tpi_rt_list,
    tpi_rt_ur,
    tpi_rt_normal_def,
    tpi_rt_list_def,
    tpi_rt_constant,
    tpi_rt_exec,
    tpi_rt_urlist,
    tpi_rt_alias
};

// enum for: finish cell, start cell, or finish plus start
enum { push_only, pop_only, push_and_pop };

// this is the type of what \the can produce.
enum internal_type { it_int = 0, it_dimen, it_glue, it_mu, it_ident, it_tok };

enum scan_expr_t { se_none, se_add, se_sub, se_mult, se_div, se_scale };

// type of what is on the save stack, to be restored when we see a }.
enum save_type { st_boundary, st_cmd, st_int, st_dim, st_glue, st_token, st_save, st_env, st_font, st_box, st_box_end, st_string };

// math delimiters. used for \left[\right] or <mrow open=a close=b>
enum del_pos {
    del_Vert = 0,
    del_vert,
    del_rangle,
    del_langle,
    del_rbrace,
    del_lbrace,
    del_lceil,
    del_rceil,
    del_lfloor,
    del_rfloor,
    del_open_par,
    del_close_par,
    del_open_bra,
    del_close_bra,
    del_open_brace,
    del_close_brace,
    del_open_ket,
    del_close_ket,
    del_bar,
    del_dot,
    del_slash,
    del_backslash,
    del_lmoustache,
    del_rmoustache,
    del_arrowvert,
    del_Arrowvert,
    del_uparrow,
    del_downarrow,
    del_updownarrow,
    del_Uparrow,
    del_Downarrow,
    del_Updownarrow,
    del_lgroup,
    del_rgroup,
    del_bracevert,
    del_invalid,
    del_tablesize
};

//  for fonts (\`a la Tralics)
enum font_info {
    fi_normal_size = 0,
    fi_small_size  = 1,
    fi_small_size1 = 3,
    fi_small_size2 = 5,
    fi_small_size3 = 7,
    fi_small_size4 = 9,
    fi_small_size5 = 11,
    fi_small_size6 = 13,
    fi_big_size    = 2,
    fi_big_size1   = 4,
    fi_big_size2   = 6,
    fi_big_size3   = 8,
    fi_big_size4   = 10,
    fi_big_size5   = 12,
    fi_big_size6   = 14,
    fi_tsize_mask  = 15,
    fi_up_shape    = 0,
    fi_it_shape    = fi_shape_mul,
    fi_sl_shape    = fi_shape_mul * 2,
    fi_sc_shape    = fi_shape_mul * 3,
    fi_shape_mask  = fi_shape_mul * 3,
    fi_rm_family   = 0,
    fi_sf_family   = fi_family_mul,
    fi_tt_family   = fi_family_mul * 2,
    fi_family_mask = fi_family_mul * 3,
    fi_md_series   = 0,
    fi_bf_series   = fi_series_mul,
    fi_bx_series   = fi_series_mul * 2,
    fi_sb_series   = fi_series_mul * 3,
    fi_c_series    = fi_series_mul * 4,
    fi_series_mask = fi_series_mul * 7,
    fi_data_mask   = 2047,
    fi_size_mask   = 15 * fi_size_mul,
};

// Current execution mode
enum mode { mode_argument, mode_h, mode_v, mode_none, mode_bib, mode_array, mode_math };

enum math_types {
    mt_flag_zero = 0, // not XML
    mt_flag_space,    // This is space
    mt_flag_small,    // normal XML
    mt_flag_small_l,
    mt_flag_small_r,
    mt_flag_small_m, // small + info
    mt_flag_bin,
    mt_flag_rel,
    mt_flag_big, // big object
    mt_flag_opL,
    mt_flag_opN,
    mt_flag_opD, // large p that allows limits
    mt_flag_large_l,
    mt_flag_large_r,
    mt_flag_large_m,
    mt_flag_dummy
};

enum math_list_type {
    invalid_cd = mt_flag_large_m + 1,
    math_open_cd,
    math_dollar_cd,
    math_ddollar_cd,
    math_env_cd,
    math_LR_cd,
    math_hbox_cd,
    math_argument_cd,
    fml_offset
};

// for extern calls
enum extern_call { ecall_xml_fo, ecall_xml_html, ecall_xml_lint, ecall_xml_tex, ecall_xml_tex1, ecall_xml_tex2, ecall_latex, ecall_dvips };

enum recur_type {
    rc_contains,
    rc_delete_first,
    rc_return_first,
    rc_return_first_and_kill,
    rc_delete,
    rc_delete_empty,
    rc_how_many,
    rc_subst,
    rc_move,
    rc_composition,
    rc_rename,
};

// A code for each math object
enum math_loc {
    math_dig_loc          = last_math_code,
    math_char_normal_loc  = math_dig_loc + 10,
    math_char_upright_loc = math_char_normal_loc + nb_mathchars,
    math_c_loc            = math_char_upright_loc + nb_mathchars,
    xml_e_loc             = math_c_loc + nb_mathchars,
    xml_o_loc,
    xml_zero_space_loc,
    xml_thinmu_space_loc,
    xml_thickmu_space_loc,
    xml_medmu_space_loc,
    xml_thinmuneg_space_loc,
    xml_quad_space_loc,
    first_inline_bhack,
    alpha_bcode,
    beta_bcode,
    gamma_bcode,
    delta_bcode,
    epsilon_bcode,
    varepsilon_bcode,
    zeta_bcode,
    eta_bcode,
    theta_bcode,
    iota_bcode,
    kappa_bcode,
    lambda_bcode,
    mu_bcode,
    nu_bcode,
    xi_bcode,
    pi_bcode,
    rho_bcode,
    sigma_bcode,
    tau_bcode,
    upsilon_bcode,
    phi_bcode,
    chi_bcode,
    psi_bcode,
    omega_bcode,
    varpi_bcode,
    varrho_bcode,
    varsigma_bcode,
    varphi_bcode,
    varkappa_bcode,
    vartheta_bcode,
    Gamma_bcode,
    Delta_bcode,
    Theta_bcode,
    Lambda_bcode,
    Xi_bcode,
    Sigma_bcode,
    Upsilon_bcode,
    Phi_bcode,
    Pi_bcode,
    Psi_bcode,
    Omega_bcode,
    first_inline_hack,
    alpha_code,
    beta_code,
    gamma_code,
    delta_code,
    epsilon_code,
    varepsilon_code,
    zeta_code,
    eta_code,
    theta_code,
    iota_code,
    kappa_code,
    lambda_code,
    mu_code,
    nu_code,
    xi_code,
    pi_code,
    rho_code,
    sigma_code,
    tau_code,
    upsilon_code,
    phi_code,
    chi_code,
    psi_code,
    omega_code,
    varpi_code,
    varrho_code,
    varsigma_code,
    varphi_code,
    varkappa_code,
    vartheta_code,
    Gamma_code,
    Delta_code,
    Theta_code,
    Lambda_code,
    Xi_code,
    Sigma_code,
    Upsilon_code,
    Phi_code,
    Pi_code,
    Psi_code,
    Omega_code,
    last_inline_bhack,
    hbar_code,
    ell_code,
    wp_code,
    Re_code,
    Im_code,
    partial_code,
    infty_code,
    emptyset_code,
    nabla_code,
    surd_code,
    top_code,
    bottom_code,
    bot_code,
    angle_code,
    triangle_code,
    forall_code,
    exists_code,
    coprod_code,
    bigvee_code,
    bigwedge_code,
    biguplus_code,
    bigcap_code,
    bigcup_code,
    int_code,
    sum_code,
    prod_code,
    bigotimes_code,
    bigodot_code,
    bigoplus_code,
    oint_code,
    bigsqcup_code,
    smallint_code,
    uplus_code,
    sqsubset_code,
    sqsupset_code,
    prec_code,
    doteq_code,
    mho_code,
    aleph_code,
    clubsuit_code,
    diamondsuit_code,
    heartsuit_code,
    spadesuit_code,
    leadsto_code,
    lhd_code,
    rhd_code,
    unlhd_code,
    unrhd_code,
    imaginaryi_code,
    exponentiale_code,
    differentiald_code,
    // mathbin
    triangleleft_code,
    triangleright_code,
    bigtriangleup_code,
    bigtriangledown_code,
    wedge_code,
    vee_code,
    cap_code,
    cup_code,
    multimap_code,
    dagger_code,
    ddagger_code,
    sqcap_code,
    triangleq_code,
    Cap_code,
    Cup_code,
    sqcup_code,
    almalg_code,
    diamand_code,
    Diamond_code,
    bullet_code,
    wr_code,
    div_code,
    odot_code,
    oslash_code,
    otimes_code,
    ominus_code,
    oplus_code,
    mp_code,
    pm_code,
    circ_code,
    bigcirc_code,
    setminus_code,
    cdot_code,
    ast_code,
    times_code,
    star_code,
    propto_code,
    sqsubseteq_code,
    sqsupseteq_code,
    parallel_code,
    mid_code,
    dashv_code,
    vdash_code,
    Vdash_code,
    models_code,
    nearrow_code,
    searrow_code,
    nwarrow_code,
    swarrow_code,
    Leftrightarrow_code,
    Leftarrow_code,
    Rightarrow_code,
    ne_code,
    le_code,
    ge_code,
    succ_code,
    approx_code,
    succeq_code,
    preceq_code,
    supset_code,
    subset_code,
    supseteq_code,
    subseteq_code,
    bindnasrepma_code,
    ni_code,
    gg_code,
    ll_code,
    gtrless_code,
    not_code,
    notin_code,
    colon_code,
    starchar_code,
    applyfct_code,
    invisiblecomma_code,
    leftrightarrow_code,
    leftarrow_code,
    rightarrow_code,
    mapsto_code,
    sim_code,
    simeq_code,
    perp_code,
    equiv_code,
    asymp_code,
    smile_code,
    frown_code,
    leftharpoonup_code,
    leftharpoondown_code,
    rightharpoonup_code,
    rightharpoondown_code,
    hookrightarrow_code,
    hookleftarrow_code,
    bowtie_code,
    Longrightarrow_code,
    longrightarrow_code,
    longleftarrow_code,
    Longleftarrow_code,
    longmapsto_code,
    longleftrightarrow_code,
    Longleftrightarrow_code,
    iff_code,
    cdots_code,
    hdots_code,
    vdots_code,
    ddots_code,
    imath_code,
    jmath_code,
    Vert_code,
    Vertx_code,
    vert_code,
    uparrow_code,
    downarrow_code,
    Uparrow_code,
    Downarrow_code,
    Updownarrow_code,
    updownarrow_code,
    backslash_code,
    Box_code,
    rmoustache_code,
    lmoustache_code,
    lgroup_code,
    rgroup_code,
    varrangle_code,
    varlangle_code,
    rangle_code,
    langle_code,
    rbrace_code,
    lbrace_code,
    lceil_code,
    rceil_code,
    lfloor_code,
    rfloor_code,
    square_code,
    cong_code,
    in_code,
    geqslant_code,
    leqslant_code,
    ncong_code,
    open_brace_code,
    close_brace_code,
    prime_code,
    last_inline_hack,
    // log like, with limits
    det_code,
    first_w_limit_code = det_code,
    gcd_code,
    inf_code,
    injlim_code,
    lim_code,
    liminf_code,
    limsup_code,
    max_code,
    min_code,
    sup_code,
    varliminf_code,
    varlimsup_code,
    varinjlim_code,
    varprojlim_code,
    projlim_code,
    last_w_limit_code = projlim_code,
    // log like, without limits
    log_code,
    lg_code,
    ln_code,
    sin_code,
    mod_code,
    arcsin_code,
    sinh_code,
    cos_code,
    arccos_code,
    cosh_code,
    tan_code,
    arctan_code,
    tanh_code,
    cot_code,
    coth_code,
    sec_code,
    csc_code,
    arg_code,
    ker_code,
    dim_code,
    hom_code,
    exp_code,
    Pr_code,
    deg_code,
    // mi
    beth_code,
    circledS_code,
    complement_code,
    daleth_code,
    eth_code,
    Finv_code,
    Game_code,
    gimel_code,
    mathsection_code,
    mathparagraph_code,
    backprime_code,
    bigstar_code,
    blacktriangledown_code,
    blacktriangle_code,
    blacksquare_code,
    blacklozenge_code,
    diagup_code,
    diagdown_code,
    lightning_code,
    lozenge_code,
    measuredangle_code,
    nexists_code,
    sphericalangle_code,
    varnothing_code,
    baro_code,
    barwedge_code,
    curlyvee_code,
    curlywedge_code,
    divideontimes_code,
    dotplus_code,
    gtrdot_code,
    intercal_code,
    interleave_code,
    leftslice_code,
    rightslice_code,
    leftthreetimes_code,
    rightthreetimes_code,
    lessdot_code,
    ltimes_code,
    rtimes_code,
    merge_code,
    sslash_code,
    talloblong_code,
    boxast_code,
    boxbox_code,
    boxbslash_code,
    boxcircle_code,
    boxdot_code,
    boxminus_code,
    boxplus_code,
    boxslash_code,
    boxtimes_code,
    centerdot_code,
    circledast_code,
    circledcirc_code,
    circleddash_code,
    obar_code,
    ogreaterthan_code,
    varocircle_code,
    llparenthesis_code,
    rrparenthesis_code, // bindnasrepma_code,
    binampersand_code,
    llbracket_code,
    rrbracket_code,
    backepsilon_code,
    because_code,
    between_code,
    nmid_code,
    nparallel_code,
    nVDash_code,
    nvDash_code,
    nVdash_code,
    nvdash_code,
    pitchfork_code,
    therefore_code,
    vDash_code,
    VDash_code,
    nLeftarrow_code,
    nLeftrightarrow_code,
    nRightarrow_code,
    nleftarrow_code,
    nleftrightarrow_code,
    nrightarrow_code,
    olessthan_code,
    approxeq_code,
    Vvdash_code,
    digamma_code,
    lnapprox_code,
    precapprox_code,
    Subset_code,
    Supset_code,
    blacktriangleleft_code,
    blacktriangleright_code,
    triangledown_code,
    circlearrowleft_code,
    circlearrowright_code,
    curvearrowleft_code,
    curvearrowright_code,
    dasharrow_code,
    dashleftarrow_code,
    dashrightarrow_code,
    fatsemi_code,
    downdownarrows_code,
    downharpoonleft_code,
    downharpoonright_code,
    leftarrowtail_code,
    rightarrowtail_code,
    leftarrowtriangle_code,
    rightarrowtriangle_code,
    leftrightarrowtriangle_code,
    leftleftarrows_code,
    upuparrows_code,
    rightrightarrows_code,
    leftrightarrows_code,
    leftrightharpoons_code,
    leftrightsquigarrow_code,
    Lleftarrow_code,
    Rrightarrow_code,
    Longmapsfrom_code,
    Mapsfrom_code,
    Longmapsto_code,
    Mapsto_code,
    longmapsfrom_code,
    mapsfrom_code,
    looparrowleft_code,
    looparrowright_code,
    Lsh_code,
    Rsh_code,
    rightleftarrows_code,
    rightleftharpoons_code,
    rightsquigarrow_code,
    twoheadleftarrow_code,
    twoheadrightarrow_code,
    upharpoonleft_code,
    upharpoonright_code,
    varprime_code,
    Prime_code,
    tprime_code,
    bprime_code,
    qprime_code,
    veebar_code,
    backsimeq_code,
    backsim_code,
    Bumpeq_code,
    bumpeq_code,
    circeq_code,
    curlyeqprec_code,
    curlyeqsucc_code,
    Doteq_code,
    doteqdot_code,
    eqcirc_code,
    eqsim_code,
    eqslantgtr_code,
    eqslantless_code,
    fallingdotseq_code,
    risingdotseq_code,
    geqq_code,
    leqq_code,
    gggtr_code,
    ggg_code,
    lll_code,
    llless_code,
    gtrapprox_code,
    lessapprox_code,
    gtreqless_code,
    gtreqqless_code,
    lesseqgtr_code,
    lesseqqgtr_code,
    lessgtr_code,
    lesssim_code,
    gtrsim_code,
    succapprox_code,
    succcurlyeq_code,
    succsim_code,
    preccurlyeq_code,
    leftrightarroweq_code,
    gnapprox_code,
    gneqq_code,
    lneqq_code,
    gneq_code,
    lneq_code,
    gnsim_code,
    lnsim_code,
    ngeq_code,
    ngtr_code,
    nleq_code,
    nless_code,
    nprec_code,
    nsim_code,
    nsucc_code,
    precnapprox_code,
    precneqq_code,
    precnsim_code,
    precsim_code,
    succnapprox_code,
    succneqq_code,
    succnsim_code,
    inplus_code,
    niplus_code,
    ntrianglerighteqslant_code,
    ntrianglelefteqslant_code,
    subseteqq_code,
    supseteqq_code,
    vartriangleleft_code,
    vartriangleright_code,
    trianglerighteq_code,
    trianglelefteq_code,
    nsubseteq_code,
    nsupseteq_code,
    ntrianglelefteq_code,
    ntrianglerighteq_code,
    ntriangleleft_code,
    ntriangleright_code,
    subsetneqq_code,
    supsetneqq_code,
    subsetneq_code,
    supsetneq_code,
    strut_code,
    mathstrut_code,
    iint_code,
    iiint_code,
    iiiint_code,
    xiint_code,
    xiiint_code,
    xiiiint_code,
    idotsint_code,
    mml_none_code,
    mml_prescripts_code,
    last_math_loc
};

enum array_class_number { chn_c, chn_l, chn_r, chn_m, chn_p, chn_b };
enum array_class_type {
    chc_cell,
    chc_bar,
    chc_v,
    chc_u,
    chc_start,
    chc_inter,
    chc_pre_bar,
    chc_pre_inter,
    chc_pre_v,
    chc_pre_u,
    chc_pre_cell
};

inline constexpr unsigned space_token_val   = space_t_offset + ' ';
inline constexpr unsigned newline_token_val = space_t_offset + '\n';
